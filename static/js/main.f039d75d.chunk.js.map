{"version":3,"sources":["components/BaseIconButton.tsx","components/BaseTime.tsx","hooks/useLoadingSynth.ts","store/index.ts","hooks/useSynth.ts","hooks/usePlayer.ts","components/TheMenu.tsx","components/TheKeyboard.tsx","components/BaseLink.tsx","components/TheFooter.tsx","components/TheLoading.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BasePlayPauseButton","props","className","onClick","disabled","icon","iconProp","convertTime","t","padZero","num","toString","padStart","hh","Math","floor","mm","ss","BaseTime","time","duration","useLoadingSynth","dispatch","useEffect","synth","PolySynth","toDestination","set","oscillator","type","envelope","attack","decay","sustain","release","payload","isLoaded","StoreContext","createContext","initialState","toneState","undefined","playbackTimeID","reducer","state","action","Transport","start","window","clearInterval","stop","pause","useSynth","useContext","usePlayer","useState","isMute","setMute","playbackTime","setInterval","handlers","dropFile","e","file","target","files","reader","FileReader","onload","midi","Midi","result","cancel","tracks","forEach","track","Part","note","triggerAttackRelease","name","velocity","keyNumElem","document","querySelector","Frequency","toMidi","toMIDI","classList","add","setTimeout","remove","notes","ceil","readAsArrayBuffer","PlayPause","toggleVolume","volume","value","minValue","TheMenu","usePlayerDI","accept","onChange","BaseIconButton","faPlay","faPause","faStop","faVolumeMute","faVolumeUp","arrayChunk","array","size","reduce","acc","index","slice","midiNotes","range","midiNotesLen","length","toNote","midiNote","isBlackKey","TheKeyboard","useSynthDI","_pressKey","triggerAttack","dataset","keyNum","_releaseKey","triggerRelease","onPointerDown","currentTarget","addEventListener","onPointerUp","removeEventListener","map","chunk","i","_note","test","BaseLink","href","url","rel","label","TheFooter","TheLoading","App","useReducer","useLoadingSampler","Provider","style","overflowX","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f039d75d.chunk.js","sourcesContent":["import { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction BasePlayPauseButton(props: {\n  iconProp: IconProp;\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n  disabled?: boolean;\n}) {\n  return (\n    <button\n      className=\"btn btn-action s-circle\"\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      <FontAwesomeIcon icon={props.iconProp} />\n    </button>\n  );\n}\n\nexport default BasePlayPauseButton;\n","const convertTime = (t: number) => {\n  const padZero = (num: number) => num.toString().padStart(2, \"0\");\n  const hh = Math.floor((t % (24 * 60 * 60)) / (60 * 60));\n  const mm = Math.floor(((t % (24 * 60 * 60)) % (60 * 60)) / 60);\n  const ss = Math.floor(((t % (24 * 60 * 60)) % (60 * 60)) % 60);\n  return hh ? hh + \":\" + mm + \":\" + padZero(ss) : mm + \":\" + padZero(ss);\n};\n\nfunction BaseTime(props: { time: number; duration: number }) {\n  return (\n    <span className=\"base-time\">\n      {convertTime(props.time)} / {convertTime(props.duration)}\n    </span>\n  );\n}\n\nexport default BaseTime;\n","import { useEffect } from \"react\";\nimport { PolySynth } from \"tone\";\nimport { Action } from \"../store\";\n\nconst useLoadingSynth = (dispatch: React.Dispatch<Action>) => {\n  useEffect(() => {\n    const synth = new PolySynth().toDestination();\n    synth.set({\n      oscillator: {\n        type: \"sawtooth32\",\n      },\n      envelope: {\n        attack: 0,\n        decay: 1,\n        sustain: 0,\n        release: 0.4,\n      },\n    });\n    dispatch({\n      type: \"LOADED_SYNTH\",\n      payload: {\n        isLoaded: true,\n        synth: synth,\n      },\n    });\n  }, [dispatch]);\n};\n\nexport default useLoadingSynth;\n","import { createContext, Dispatch } from \"react\";\nimport { PlaybackState, PolySynth, Transport } from \"tone\";\n\nexport type State = {\n  time: number;\n  duration: number;\n  toneState: PlaybackState;\n  isLoaded: boolean;\n  synth: PolySynth | undefined;\n  disabled: boolean;\n  playbackTimeID: number;\n};\n\nexport type Action =\n  | {\n      type: \"LOADED_SYNTH\";\n      payload: { synth: PolySynth; isLoaded: boolean };\n    }\n  | {\n      type: \"LOADED_MIDI\";\n      payload: { duration: number; playbackTimeID: number };\n    }\n  | { type: \"COUNT_TIME\" }\n  | { type: \"PLAY_MIDI\"; payload: { playbackTimeID: number } }\n  | { type: \"PAUSE_MIDI\" }\n  | { type: \"STOP_MIDI\" };\n\nexport const StoreContext = createContext(\n  {} as { state: State; dispatch: Dispatch<Action> }\n);\n\nexport const initialState: State = {\n  time: 0,\n  duration: 0,\n  toneState: \"stopped\",\n  isLoaded: false,\n  synth: undefined,\n  disabled: true,\n  playbackTimeID: 0,\n};\n\nexport const reducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case \"LOADED_SYNTH\": {\n      const payload = action.payload;\n      return {\n        ...state,\n        isLoaded: payload.isLoaded,\n        synth: payload.synth,\n      };\n    }\n    case \"LOADED_MIDI\": {\n      const payload = action.payload;\n      return {\n        ...state,\n        duration: payload.duration,\n        time: 0,\n        disabled: false,\n        toneState: Transport.start().state,\n        playbackTimeID: payload.playbackTimeID,\n      };\n    }\n    case \"COUNT_TIME\": {\n      if (state.duration > state.time) {\n        return {\n          ...state,\n          time: state.time + 1,\n        };\n      } else {\n        window.clearInterval(state.playbackTimeID);\n        return {\n          ...state,\n          time: 0,\n          toneState: Transport.stop().state,\n          playbackTimeID: 0,\n        };\n      }\n    }\n    case \"PLAY_MIDI\": {\n      return {\n        ...state,\n        toneState: Transport.start().state,\n        playbackTimeID: action.payload.playbackTimeID,\n      };\n    }\n    case \"PAUSE_MIDI\": {\n      window.clearInterval(state.playbackTimeID);\n      return {\n        ...state,\n        toneState: Transport.pause().state,\n        playbackTimeID: 0,\n      };\n    }\n    case \"STOP_MIDI\": {\n      window.clearInterval(state.playbackTimeID);\n      return {\n        ...state,\n        time: 0,\n        toneState: Transport.stop().state,\n        playbackTimeID: 0,\n      };\n    }\n  }\n};\n","import { useContext } from \"react\";\nimport { StoreContext } from \"../store\";\n\nconst useSynth = () => {\n  const { state } = useContext(StoreContext);\n  return state.synth;\n};\n\nexport default useSynth;\n","import { useState, useContext } from \"react\";\nimport { Frequency, Part, Transport } from \"tone\";\nimport { Midi } from \"@tonejs/midi\";\nimport { StoreContext } from \"../store\";\n\nconst toMIDI = (note: string) => Frequency(note).toMidi();\n\nconst usePlayer = () => {\n  const { state, dispatch } = useContext(StoreContext);\n  const [isMute, setMute] = useState(false);\n  const synth = state.synth;\n  const playbackTime = () =>\n    window.setInterval(() => dispatch({ type: \"COUNT_TIME\" }), 1000);\n\n  const dropFile = (e: any) => {\n    const [file] = e.target.files;\n    const reader = new FileReader();\n    reader.onload = (e: any) => {\n      const midi = new Midi(e.target.result);\n      Transport.cancel();\n      midi.tracks.forEach((track) => {\n        new Part((time, note) => {\n          synth?.triggerAttackRelease(\n            note.name,\n            note.duration,\n            time,\n            note.velocity\n          );\n          const keyNumElem = document.querySelector(\n            `[data-key-num=\"${toMIDI(note.name)}\"]`\n          )!.classList;\n          keyNumElem.add(\"--pressing\");\n          setTimeout(\n            () => keyNumElem.remove(\"--pressing\"),\n            note.duration * 1000\n          );\n        }, track.notes).start();\n      });\n      dispatch({\n        type: \"LOADED_MIDI\",\n        payload: {\n          duration: Math.ceil(midi.duration),\n          playbackTimeID: playbackTime(),\n        },\n      });\n    };\n    reader.readAsArrayBuffer(file);\n  };\n\n  const PlayPause = () =>\n    dispatch(\n      state.toneState !== \"started\"\n        ? {\n            type: \"PLAY_MIDI\",\n            payload: {\n              playbackTimeID: playbackTime(),\n            },\n          }\n        : { type: \"PAUSE_MIDI\" }\n    );\n\n  const stop = () => dispatch({ type: \"STOP_MIDI\" });\n\n  const toggleVolume = () => {\n    if (!synth) return;\n    const volume = synth.volume;\n    volume.value = !isMute ? volume.minValue : 0;\n    setMute(!isMute);\n  };\n\n  return {\n    state: {\n      isMute,\n      ...state,\n    },\n    handlers: {\n      dropFile,\n      PlayPause,\n      stop,\n      toggleVolume,\n    },\n  };\n};\n\nexport default usePlayer;\n","import {\n  faPlay,\n  faPause,\n  faStop,\n  faVolumeUp,\n  faVolumeMute,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport BaseIconButton from \"./BaseIconButton\";\nimport BaseTime from \"./BaseTime\";\nimport { usePlayer as usePlayerDI } from \"../hooks\";\n\nfunction TheMenu({ usePlayer = usePlayerDI }) {\n  const { state, handlers } = usePlayer();\n  return (\n    <div className=\"the-menu\">\n      <div className=\"the-menu__filedrop form-group\">\n        <input\n          className=\"form-input\"\n          type=\"file\"\n          accept=\"audio/midi\"\n          onChange={handlers.dropFile}\n        />\n      </div>\n      <div className=\"the-menu__toolbar el-cluster el-cluster--justify:flex-start\">\n        <BaseIconButton\n          onClick={handlers.PlayPause}\n          iconProp={state.toneState !== \"started\" ? faPlay : faPause}\n          disabled={state.disabled}\n        />\n        <BaseIconButton\n          onClick={handlers.stop}\n          iconProp={faStop}\n          disabled={state.disabled}\n        />\n        <BaseIconButton\n          onClick={handlers.toggleVolume}\n          iconProp={!state.isMute ? faVolumeUp : faVolumeMute}\n        />\n        <BaseTime time={state.time} duration={state.duration} />\n      </div>\n    </div>\n  );\n}\n\nexport default TheMenu;\n","import { range } from \"ramda\";\nimport { Frequency } from \"tone\";\nimport { useSynth as useSynthDI } from \"../hooks\";\nimport \"./TheKeyboard.css\";\n\n// https://www.nxworld.net/js-array-chunk.html\nconst arrayChunk = ([...array], size = 1) =>\n  array.reduce(\n    (acc, value, index) =>\n      index % size ? acc : [...acc, array.slice(index, index + size)],\n    []\n  );\n\nconst midiNotes = range(21, 109);\nconst midiNotesLen = midiNotes.length / 2;\nconst toNote = (midiNote: number) => Frequency(midiNote, \"midi\").toNote();\nconst isBlackKey = (midiNote: number) => {\n  switch ((midiNote - 20) % 12) {\n    case 0:\n    case 2:\n    case 5:\n    case 7:\n    case 10:\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction TheKeyboard({ useSynth = useSynthDI }) {\n  const synth = useSynth();\n\n  const _pressKey = (e: any) => {\n    const target = e.target;\n    target.classList.add(\"--pressing\");\n    synth?.triggerAttack(toNote(target.dataset.keyNum));\n  };\n\n  const _releaseKey = (e: any) => {\n    const target = e.target;\n    target.classList.remove(\"--pressing\");\n    synth?.triggerRelease(toNote(target.dataset.keyNum));\n  };\n\n  const pressKey = (e: any) => {\n    _pressKey(e);\n    const currentTarget = e.currentTarget;\n    currentTarget.addEventListener(\"pointerover\", _pressKey);\n    currentTarget.addEventListener(\"pointerout\", _releaseKey);\n  };\n  const releaseKey = (e: any) => {\n    _releaseKey(e);\n    const currentTarget = e.currentTarget;\n    currentTarget.removeEventListener(\"pointerover\", _pressKey);\n    currentTarget.removeEventListener(\"pointerout\", _releaseKey);\n  };\n\n  return (\n    <div\n      className=\"the-keyboard el-stack\"\n      onPointerDown={pressKey}\n      onPointerUp={releaseKey}\n    >\n      {arrayChunk(midiNotes, midiNotesLen).map(\n        (chunk: Array<number>, i: number) => {\n          return (\n            <div className=\"the-keyboard__row\" key={i}>\n              {chunk.map((midiNote: number) => {\n                const _note = toNote(midiNote);\n                return (\n                  <div\n                    className=\"the-keyboard__key-container\"\n                    key={midiNote - 21}\n                  >\n                    <div\n                      className={\n                        \"the-keyboard__key\" +\n                        \" \" +\n                        (!isBlackKey(midiNote) ? \"--white\" : \"--black\")\n                      }\n                      data-key-num={midiNote}\n                    >\n                      <span className=\"the-keyboard__label\">\n                        {/C[1-8]/.test(_note) ? _note : \"\"}\n                      </span>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          );\n        }\n      )}\n    </div>\n  );\n}\n\nexport default TheKeyboard;\n","function BaseLink(props: { url: string; label: string }) {\n  return (\n    <a\n      className=\"base-link\"\n      href={props.url}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {props.label}\n    </a>\n  );\n}\n\nexport default BaseLink;\n","import BaseLink from \"./BaseLink\";\n\nfunction TheFooter() {\n  return (\n    <div className=\"the-footer-child el-center\">\n      <small className=\"the-footer-child__container\">\n        <BaseLink url=\"https://github.com/l1ck0h/keyboard\" label=\"GitHub\" /> /\n        &copy; 2022 l1ck0h\n      </small>\n    </div>\n  );\n}\n\nexport default TheFooter;\n","function TheLoading() {\n  return (\n    <div className=\"el-cover\">\n      <div className=\"el-cover__centered text-center\">\n        <div className=\"loading loading-lg\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default TheLoading;\n","import { useReducer } from \"react\";\nimport TheMenu from \"./components/TheMenu\";\nimport TheKeyboard from \"./components/TheKeyboard\";\nimport TheFooter from \"./components/TheFooter\";\nimport TheLoading from \"./components/TheLoading\";\nimport { useLoadingSampler } from \"./hooks\";\nimport { initialState, reducer, StoreContext } from \"./store\";\nimport \"./App.css\";\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useLoadingSampler(dispatch);\n  return (\n    <div className=\"App\">\n      {state.isLoaded ? (\n        <StoreContext.Provider value={{ state, dispatch }}>\n          <div className=\"el-cover\">\n            <TheMenu />\n            <div className=\"el-cover__centered\" style={{ overflowX: \"auto\" }}>\n              <TheKeyboard />\n            </div>\n            <TheFooter />\n          </div>\n        </StoreContext.Provider>\n      ) : (\n        <TheLoading />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"spectre.css/dist/spectre.min.css\";\nimport \"@l1ck0h/every-layout.css/every-layout.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}