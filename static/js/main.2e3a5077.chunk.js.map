{"version":3,"sources":["components/BaseIconButton.tsx","components/BaseTime.tsx","modules/index.ts","store/index.ts","hooks/useKeyboard.ts","hooks/usePlayer.ts","hooks/useSampler.ts","components/TheMenu.tsx","components/BaseKey.tsx","components/TheKeyboard.tsx","components/BaseLink.tsx","components/TheFooter.tsx","components/TheLoading.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BasePlayPauseButton","props","className","onClick","disabled","icon","iconProp","convertTime","t","padZero","num","toString","padStart","hh","Math","floor","mm","ss","BaseTime","time","duration","midi_to_note","keyNum","Frequency","toNote","StoreContext","createContext","initialState","toneState","isLoaded","sampler","undefined","playbackTimeID","reducer","state","action","type","payload","Transport","start","window","clearInterval","stop","pause","useKeyboard","useContext","_pressKey","e","target","dataset","classList","add","triggerAttack","_releaseKey","remove","triggerRelease","_overKey","Array","from","document","querySelectorAll","length","_outKey","_touchMoveKey","preventDefault","pressKey","currentTarget","addEventListener","releaseKey","removeEventListener","usePlayer","dispatch","useState","isMute","setMute","playbackTime","setInterval","handlers","dropFile","file","files","reader","FileReader","onload","midi","Midi","result","cancel","tracks","forEach","track","Part","note","triggerAttackRelease","name","velocity","keyNumElem","querySelector","toMidi","note_to_midi","setTimeout","notes","ceil","readAsArrayBuffer","PlayPause","toggleVolume","volume","value","minValue","useSampler","useEffect","Sampler","attack","urls","A0","C1","A1","C2","A2","C3","A3","C4","A4","C5","A5","C6","A6","C7","A7","C8","baseUrl","process","release","toDestination","TheMenu","accept","onChange","BaseIconButton","faPlay","faPause","faStop","faVolumeMute","faVolumeUp","BaseKey","midiNote","_note","isBlackKey","test","midiNotes","range","TheKeyboard","onPointerDown","onPointerUp","map","i","BaseLink","href","url","rel","label","TheFooter","TheLoading","App","useReducer","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2e3a5077.chunk.js","sourcesContent":["import { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction BasePlayPauseButton(props: {\n  iconProp: IconProp;\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n  disabled?: boolean;\n}) {\n  return (\n    <button\n      className=\"btn btn-action s-circle\"\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      <FontAwesomeIcon icon={props.iconProp} />\n    </button>\n  );\n}\n\nexport default BasePlayPauseButton;\n","const convertTime = (t: number) => {\n  const padZero = (num: number) => num.toString().padStart(2, \"0\");\n  const hh = Math.floor((t % (24 * 60 * 60)) / (60 * 60));\n  const mm = Math.floor(((t % (24 * 60 * 60)) % (60 * 60)) / 60);\n  const ss = Math.floor(((t % (24 * 60 * 60)) % (60 * 60)) % 60);\n  return hh ? hh + \":\" + mm + \":\" + padZero(ss) : mm + \":\" + padZero(ss);\n};\n\nfunction BaseTime(props: { time: number; duration: number }) {\n  return (\n    <span className=\"base-time\">\n      {convertTime(props.time)} / {convertTime(props.duration)}\n    </span>\n  );\n}\n\nexport default BaseTime;\n","import { Frequency } from \"tone\";\n\nexport const midi_to_note = (keyNum: number) =>\n  Frequency(keyNum, \"midi\").toNote();\nexport const note_to_midi = (note: string) => Frequency(note).toMidi();\n","import { createContext, Dispatch } from \"react\";\nimport { PlaybackState, Sampler, Transport } from \"tone\";\n\nexport type State = {\n  time: number;\n  duration: number;\n  toneState: PlaybackState;\n  isLoaded: boolean;\n  sampler: Sampler | undefined;\n  disabled: boolean;\n  playbackTimeID: number;\n};\n\nexport type Action =\n  | { type: \"LOADED_SAMPLER\"; payload: { sampler: Sampler; isLoaded: boolean } }\n  | {\n      type: \"LOADED_MIDI\";\n      payload: { duration: number; playbackTimeID: number };\n    }\n  | { type: \"COUNT_TIME\" }\n  | { type: \"PLAY_MIDI\"; payload: { playbackTimeID: number } }\n  | { type: \"PAUSE_MIDI\" }\n  | { type: \"STOP_MIDI\" };\n\nexport const StoreContext = createContext(\n  {} as { state: State; dispatch: Dispatch<Action> }\n);\n\nexport const initialState: State = {\n  time: 0,\n  duration: 0,\n  toneState: \"stopped\",\n  isLoaded: false,\n  sampler: undefined,\n  disabled: true,\n  playbackTimeID: 0,\n};\n\nexport const reducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case \"LOADED_SAMPLER\": {\n      const payload = action.payload;\n      return {\n        ...state,\n        isLoaded: payload.isLoaded,\n        sampler: payload.sampler,\n      };\n    }\n    case \"LOADED_MIDI\": {\n      const payload = action.payload;\n      return {\n        ...state,\n        duration: payload.duration,\n        time: 0,\n        disabled: false,\n        toneState: Transport.start().state,\n        playbackTimeID: payload.playbackTimeID,\n      };\n    }\n    case \"COUNT_TIME\": {\n      if (state.duration > state.time) {\n        return {\n          ...state,\n          time: state.time + 1,\n        };\n      } else {\n        window.clearInterval(state.playbackTimeID);\n        return {\n          ...state,\n          time: 0,\n          toneState: Transport.stop().state,\n          playbackTimeID: 0,\n        };\n      }\n    }\n    case \"PLAY_MIDI\": {\n      return {\n        ...state,\n        toneState: Transport.start().state,\n        playbackTimeID: action.payload.playbackTimeID,\n      };\n    }\n    case \"PAUSE_MIDI\": {\n      window.clearInterval(state.playbackTimeID);\n      return {\n        ...state,\n        toneState: Transport.pause().state,\n        playbackTimeID: 0,\n      };\n    }\n    case \"STOP_MIDI\": {\n      window.clearInterval(state.playbackTimeID);\n      return {\n        ...state,\n        time: 0,\n        toneState: Transport.stop().state,\n        playbackTimeID: 0,\n      };\n    }\n  }\n};\n","import { useContext } from \"react\";\nimport { midi_to_note } from \"../modules\";\nimport { StoreContext } from \"../store\";\n\nconst useKeyboard = () => {\n  const { state } = useContext(StoreContext);\n\n  const _pressKey = (e: any) => {\n    if (!state.sampler) return;\n    const target = e.target;\n    if (target.dataset.keyNum) {\n      target.classList.add(\"Keyboard__key--pressing\");\n      state.sampler.triggerAttack(midi_to_note(target.dataset.keyNum));\n    }\n  };\n\n  const _releaseKey = (e: any) => {\n    if (!state.sampler) return;\n    const target = e.target;\n    target.classList.remove(\"Keyboard__key--pressing\");\n    state.sampler.triggerRelease(midi_to_note(target.dataset.keyNum));\n  };\n\n  const _overKey = (e: any) => {\n    const elements = Array.from(document.querySelectorAll(\":active\"));\n    if (elements.length !== 0) _pressKey(e);\n  };\n\n  const _outKey = (e: any) => _releaseKey(e);\n\n  const _touchMoveKey = (e: any) => e.preventDefault();\n\n  const pressKey = (e: any) => {\n    _pressKey(e);\n    const currentTarget = e.currentTarget;\n    currentTarget.addEventListener(\"pointerover\", _overKey);\n    currentTarget.addEventListener(\"pointerout\", _outKey);\n    currentTarget.addEventListener(\"touchmove\", _touchMoveKey);\n  };\n\n  const releaseKey = (e: any) => {\n    _releaseKey(e);\n    const currentTarget = e.currentTarget;\n    currentTarget.removeEventListener(\"pointerover\", _overKey);\n    currentTarget.removeEventListener(\"pointerout\", _outKey);\n    currentTarget.removeEventListener(\"touchmove\", _touchMoveKey);\n  };\n\n  return {\n    pressKey,\n    releaseKey,\n  };\n};\n\nexport default useKeyboard;\n","import { useState, useContext } from \"react\";\nimport { Part, Transport } from \"tone\";\nimport { Midi } from \"@tonejs/midi\";\nimport { note_to_midi } from \"../modules\";\nimport { StoreContext } from \"../store\";\n\nconst usePlayer = () => {\n  const { state, dispatch } = useContext(StoreContext);\n  const [isMute, setMute] = useState(false);\n  const sampler = state.sampler!;\n  const playbackTime = () =>\n    window.setInterval(() => dispatch({ type: \"COUNT_TIME\" }), 1000);\n\n  const dropFile = (e: any) => {\n    const [file] = e.target.files;\n    const reader = new FileReader();\n    reader.onload = (e: any) => {\n      const midi = new Midi(e.target.result);\n      Transport.cancel();\n      midi.tracks.forEach((track) => {\n        new Part((time, note) => {\n          sampler.triggerAttackRelease(\n            note.name,\n            note.duration,\n            time,\n            note.velocity\n          );\n          const keyNumElem = document.querySelector(\n            `[data-key-num=\"${note_to_midi(note.name)}\"]`\n          )!;\n          keyNumElem.classList.add(\"Keyboard__key--pressing\");\n          setTimeout(\n            () => keyNumElem.classList.remove(\"Keyboard__key--pressing\"),\n            note.duration * 900\n          );\n        }, track.notes).start();\n      });\n      dispatch({\n        type: \"LOADED_MIDI\",\n        payload: {\n          duration: Math.ceil(midi.duration),\n          playbackTimeID: playbackTime(),\n        },\n      });\n    };\n    reader.readAsArrayBuffer(file);\n  };\n\n  const PlayPause = () => {\n    if (state.toneState !== \"started\") {\n      dispatch({\n        type: \"PLAY_MIDI\",\n        payload: {\n          playbackTimeID: playbackTime(),\n        },\n      });\n    } else {\n      dispatch({ type: \"PAUSE_MIDI\" });\n    }\n  };\n\n  const stop = () => dispatch({ type: \"STOP_MIDI\" });\n\n  const toggleVolume = () => {\n    if (!sampler) return;\n    sampler.volume.value = isMute ? 0 : sampler.volume.minValue;\n    setMute(!isMute);\n  };\n\n  return {\n    state: {\n      isMute,\n      ...state,\n    },\n    handlers: {\n      dropFile,\n      PlayPause,\n      stop,\n      toggleVolume,\n    },\n  };\n};\n\nexport default usePlayer;\n","import { useEffect } from \"react\";\nimport { Sampler } from \"tone\";\nimport { Action } from \"../store\";\n\nconst useSampler = (dispatch: React.Dispatch<Action>) => {\n  useEffect(() => {\n    const sampler = new Sampler({\n      attack: 0,\n      urls: {\n        A0: \"A0v1.mp3\",\n        C1: \"C1v1.mp3\",\n        \"D#1\": \"Ds1v1.mp3\",\n        \"F#1\": \"Fs1v1.mp3\",\n        A1: \"A1v1.mp3\",\n        C2: \"C2v1.mp3\",\n        \"D#2\": \"Ds2v1.mp3\",\n        \"F#2\": \"Fs2v1.mp3\",\n        A2: \"A2v1.mp3\",\n        C3: \"C3v1.mp3\",\n        \"D#3\": \"Ds3v1.mp3\",\n        \"F#3\": \"Fs3v1.mp3\",\n        A3: \"A3v1.mp3\",\n        C4: \"C4v1.mp3\",\n        \"D#4\": \"Ds4v1.mp3\",\n        \"F#4\": \"Fs4v1.mp3\",\n        A4: \"A4v1.mp3\",\n        C5: \"C5v1.mp3\",\n        \"D#5\": \"Ds5v1.mp3\",\n        \"F#5\": \"Fs5v1.mp3\",\n        A5: \"A5v1.mp3\",\n        C6: \"C6v1.mp3\",\n        \"D#6\": \"Ds6v1.mp3\",\n        \"F#6\": \"Fs6v1.mp3\",\n        A6: \"A6v1.mp3\",\n        C7: \"C7v1.mp3\",\n        \"D#7\": \"Ds7v1.mp3\",\n        \"F#7\": \"Fs7v1.mp3\",\n        A7: \"A7v1.mp3\",\n        C8: \"C8v1.mp3\",\n      },\n      baseUrl: process.env.PUBLIC_URL + \"/audio/\",\n      release: 1,\n      onload: () =>\n        dispatch({\n          type: \"LOADED_SAMPLER\",\n          payload: {\n            isLoaded: true,\n            sampler: sampler,\n          },\n        }),\n    }).toDestination();\n  }, [dispatch]);\n};\n\nexport default useSampler;\n","import {\n  faPlay,\n  faPause,\n  faStop,\n  faVolumeUp,\n  faVolumeMute,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport BaseIconButton from \"./BaseIconButton\";\nimport BaseTime from \"./BaseTime\";\nimport { usePlayer } from \"../hooks\";\n\nfunction TheMenu() {\n  const { state, handlers } = usePlayer();\n\n  return (\n    <div className=\"the-menu\">\n      <div className=\"the-menu__filedrop form-group\">\n        <input\n          className=\"form-input\"\n          type=\"file\"\n          accept=\"audio/midi\"\n          onChange={handlers.dropFile}\n        />\n      </div>\n      <div className=\"the-menu__toolbar el-cluster el-cluster--justify:flex-start\">\n        <BaseIconButton\n          onClick={handlers.PlayPause}\n          iconProp={state.toneState !== \"started\" ? faPlay : faPause}\n          disabled={state.disabled}\n        />\n        <BaseIconButton\n          onClick={handlers.stop}\n          iconProp={faStop}\n          disabled={state.disabled}\n        />\n        <BaseIconButton\n          onClick={handlers.toggleVolume}\n          iconProp={!state.isMute ? faVolumeUp : faVolumeMute}\n        />\n        <BaseTime time={state.time} duration={state.duration} />\n      </div>\n    </div>\n  );\n}\n\nexport default TheMenu;\n","import { Frequency } from \"tone\";\n\nconst note = (midiNote: number) => Frequency(midiNote, \"midi\").toNote();\n\nfunction BaseKey(props: { midiNote: number; isBlackKey: boolean }) {\n  const _note = note(props.midiNote);\n  return (\n    <div className=\"Keyboard__key-container\">\n      <div\n        className={\n          !props.isBlackKey ? \"Keyboard__key--white\" : \"Keyboard__key--black\"\n        }\n        data-key-num={props.midiNote}\n      >\n        <span className=\"Keyboard__label\">\n          {/C[1-8]/.test(_note) ? _note : \"\"}\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default BaseKey;\n","import { range } from \"ramda\";\nimport BaseKey from \"./BaseKey\";\nimport { useKeyboard } from \"../hooks\";\n\nconst midiNotes = range(21, 109);\nconst isBlackKey = (midiNote: number) => {\n  switch ((midiNote - 20) % 12) {\n    case 0:\n    case 2:\n    case 5:\n    case 7:\n    case 10:\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction TheKeyboard() {\n  const { pressKey, releaseKey } = useKeyboard();\n\n  return (\n    <div\n      className=\"the-keyboard\"\n      onPointerDown={pressKey}\n      onPointerUp={releaseKey}\n    >\n      <div className=\"Keyboard app-util-width:100%\">\n        {midiNotes.map((midiNote: number, i: number) => {\n          return (\n            <BaseKey\n              key={i}\n              midiNote={midiNote}\n              isBlackKey={isBlackKey(midiNote)}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default TheKeyboard;\n","function BaseLink(props: { url: string; label: string }) {\n  return (\n    <a\n      className=\"base-link\"\n      href={props.url}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {props.label}\n    </a>\n  );\n}\n\nexport default BaseLink;\n","import BaseLink from \"./BaseLink\";\n\nfunction TheFooter() {\n  return (\n    <div className=\"the-footer-child el-center\">\n      <small className=\"the-footer-child__container\">\n        <BaseLink url=\"https://github.com/l1ck0h/keyboard\" label=\"GitHub\" /> /\n        &copy; 2022 l1ck0h\n      </small>\n    </div>\n  );\n}\n\nexport default TheFooter;\n","function TheLoading() {\n  return (\n    <div className=\"el-cover\">\n      <div className=\"el-cover__centered text-center\">\n        <div className=\"loading loading-lg\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default TheLoading;\n","import { useReducer } from \"react\";\nimport TheMenu from \"./components/TheMenu\";\nimport TheKeyboard from \"./components/TheKeyboard\";\nimport TheFooter from \"./components/TheFooter\";\nimport TheLoading from \"./components/TheLoading\";\nimport { useSampler } from \"./hooks\";\nimport { initialState, reducer, StoreContext } from \"./store\";\nimport \"./App.css\";\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useSampler(dispatch);\n  return (\n    <div className=\"App\">\n      {state.isLoaded ? (\n        <StoreContext.Provider value={{ state, dispatch }}>\n          <div className=\"el-cover\">\n            <TheMenu />\n            <div className=\"el-cover__centered app-util-margin:auto\">\n              <TheKeyboard />\n            </div>\n            <TheFooter />\n          </div>\n        </StoreContext.Provider>\n      ) : (\n        <TheLoading />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"spectre.css/dist/spectre.min.css\";\nimport \"@l1ck0h/every-layout.css/every-layout.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}