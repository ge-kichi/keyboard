{"version":3,"sources":["ts/midiNote.ts","ts/timer.ts","components/molecules/FileDrop.tsx","components/atoms/GitHubLink.tsx","components/atoms/Time.tsx","components/atoms/PlayPauseButton.tsx","components/atoms/StopButton.tsx","components/atoms/VolumeButton.tsx","components/molecules/Toolbar.tsx","components/organisms/Menu.tsx","components/atoms/Key.tsx","components/molecules/KeyboardRow.tsx","components/organisms/Keyboard.tsx","ts/reducer.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["midi_to_note","keyNum","Frequency","toNote","intervalID","startTimer","func","window","setInterval","stopTimer","clearInterval","FileDrop","props","appDispatch","useContext","AppContext","useState","text","setText","sampler","setupMidi","file","reader","FileReader","onload","e","midi","Midi","target","result","Transport","cancel","tracks","forEach","track","Part","time","note","triggerAttackRelease","name","duration","velocity","keyNumElem","document","querySelector","toMidi","note_to_midi","classList","add","setTimeout","remove","notes","start","type","Math","ceil","disabled","readAsArrayBuffer","id","onDragEnter","currentTarget","onDragLeave","onDrop","accept","onChange","files","GitHubLink","IconButton","href","rel","GitHub","convertTime","t","hh","floor","mm","ss","mmss","toString","padStart","Time","PlayPauseButton","onClick","state","Pause","PlayArrow","StopButton","Stop","VolumeButton","mute","VolumeOff","VolumeUp","Toolbar","appState","isMute","setMute","toneState","volume","value","minValue","Menu","regExpC","Key","midiNote","className","isBlackKey","test","KeyboardRow","midiNotes","map","i","startNum","range","midiNotesLen","length","array","size","reduce","acc","index","slice","arrayChunk","midiNotesUpper","midiNotesLower","Keyboard","_pressKey","dataset","triggerAttack","_releaseKey","triggerRelease","_overKey","Array","from","querySelectorAll","_outKey","onPointerDown","addEventListener","onPointerUp","removeEventListener","query","initialAppState","appReducer","action","stop","pause","useStyles","makeStyles","theme","backdrop","zIndex","drawer","color","createContext","App","classes","isOpen","setOpen","undefined","setSampler","useReducer","useEffect","_sampler","Sampler","attack","urls","A0","C1","A1","C2","A2","C3","A3","C4","A4","C5","A5","C6","A6","C7","A7","C8","baseUrl","process","release","toDestination","Provider","Backdrop","open","CircularProgress","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.99e03d3a.chunk.js","sourcesContent":["import { Frequency } from \"tone\";\n\nexport const midi_to_note = (keyNum: number) =>\n  Frequency(keyNum, \"midi\").toNote();\nexport const note_to_midi = (note: string) => Frequency(note).toMidi();\n","let intervalID: number = 0;\nexport const startTimer = (func: () => void) =>\n  (intervalID = window.setInterval(func, 1000));\nexport const stopTimer = () => window.clearInterval(intervalID);\n","import { useContext, useState } from \"react\";\nimport { Part, Sampler, Transport } from \"tone\";\nimport { Midi } from \"@tonejs/midi\";\nimport { AppContext } from \"../../App\";\nimport { note_to_midi } from \"../../ts/midiNote\";\nimport { startTimer } from \"../../ts/timer\";\nimport \"./FileDrop.css\";\n\nfunction FileDrop(props: { sampler: Sampler | undefined }) {\n  const { appDispatch } = useContext(AppContext);\n  const [text, setText] = useState(\"Drop a midi file here\");\n  const sampler = props.sampler!;\n\n  const setupMidi = (file: File) => {\n    const reader = new FileReader();\n    reader.onload = (e: any) => {\n      const midi = new Midi(e.target.result);\n      Transport.cancel();\n      midi.tracks.forEach((track) => {\n        new Part((time, note) => {\n          sampler.triggerAttackRelease(\n            note.name,\n            note.duration,\n            time,\n            note.velocity\n          );\n          const keyNumElem = document.querySelector(\n            `[data-key-num=\"${note_to_midi(note.name)}\"]`\n          )!;\n          keyNumElem.classList.add(\"pressing\");\n          setTimeout(\n            () => keyNumElem.classList.remove(\"pressing\"),\n            note.duration * 900\n          );\n        }, track.notes).start();\n      });\n      appDispatch({ type: \"setDuration\", duration: Math.ceil(midi.duration) });\n      appDispatch({ type: \"setTime\", time: 0 });\n      appDispatch({ type: \"playMidi\" });\n      startTimer(() => appDispatch({ type: \"countTime\" }));\n      appDispatch({ type: \"setDisabled\", disabled: false });\n    };\n    reader.readAsArrayBuffer(file);\n  };\n\n  const dropFile = (e: any) => {\n    const [file] = e.target.files;\n    setText(file.name);\n    setupMidi(file);\n  };\n\n  return (\n    // https://codesandbox.io/s/tonejs-midi-vfwdz?file=/index.html\n    <div\n      id=\"fileDrop\"\n      onDragEnter={(e: any) => e.currentTarget.classList.add(\"hover\")}\n      onDragLeave={(e: any) => e.currentTarget.classList.remove(\"hover\")}\n      onDrop={(e: any) => e.currentTarget.classList.remove(\"hover\")}\n    >\n      <span id=\"text\">{text}</span>\n      <input type=\"file\" accept=\"audio/midi\" onChange={dropFile} />\n    </div>\n  );\n}\n\nexport default FileDrop;\n","import { IconButton } from \"@material-ui/core\";\nimport { GitHub } from \"@material-ui/icons\";\n\nfunction GitHubLink() {\n  return (\n    <IconButton\n      href=\"https://github.com/l1ck0h/keyboard\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <GitHub />\n    </IconButton>\n  );\n}\n\nexport default GitHubLink;\n","import \"./Time.css\";\n\nconst convertTime = (t: number) => {\n  const padZero = (num: number) => num.toString().padStart(2, \"0\");\n  const hh = Math.floor((t % (24 * 60 * 60)) / (60 * 60));\n  const mm = Math.floor(((t % (24 * 60 * 60)) % (60 * 60)) / 60);\n  const ss = Math.floor(((t % (24 * 60 * 60)) % (60 * 60)) % 60);\n  const mmss = mm + \":\" + padZero(ss);\n  if (!hh) {\n    return mmss;\n  } else {\n    return hh + \":\" + mmss;\n  }\n};\n\nfunction Time(props: { time: number; duration: number }) {\n  return (\n    <span id=\"time\">\n      {convertTime(props.time)} / {convertTime(props.duration)}\n    </span>\n  );\n}\n\nexport default Time;\n","import { PlaybackState } from \"tone\";\nimport { IconButton } from \"@material-ui/core\";\nimport { PlayArrow, Pause } from \"@material-ui/icons\";\n\nfunction PlayPauseButton(props: {\n  state: PlaybackState | undefined;\n  disabled: boolean;\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n}) {\n  const selectButtonIcon = () => {\n    return props.state === \"started\" ? <Pause /> : <PlayArrow />;\n  };\n\n  return (\n    <IconButton disabled={props.disabled} onClick={props.onClick}>\n      {selectButtonIcon()}\n    </IconButton>\n  );\n}\n\nexport default PlayPauseButton;\n","import { IconButton } from \"@material-ui/core\";\nimport { Stop } from \"@material-ui/icons\";\n\nfunction StopButton(props: {\n  disabled: boolean;\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n}) {\n  return (\n    <IconButton disabled={props.disabled} onClick={props.onClick}>\n      <Stop />\n    </IconButton>\n  );\n}\n\nexport default StopButton;\n","import { IconButton } from \"@material-ui/core\";\nimport { VolumeOff, VolumeUp } from \"@material-ui/icons\";\n\nfunction VolumeButton(props: {\n  mute: boolean;\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n}) {\n  const selectVolumeIcon = () => {\n    return props.mute ? <VolumeOff /> : <VolumeUp />;\n  };\n\n  return <IconButton onClick={props.onClick}>{selectVolumeIcon()}</IconButton>;\n}\n\nexport default VolumeButton;\n","import { useContext, useState } from \"react\";\nimport { Sampler } from \"tone\";\nimport { AppContext } from \"../../App\";\nimport GitHubLink from \"../atoms/GitHubLink\";\nimport Time from \"../atoms/Time\";\nimport PlayPauseButton from \"../atoms/PlayPauseButton\";\nimport StopButton from \"../atoms/StopButton\";\nimport VolumeButton from \"../atoms/VolumeButton\";\nimport { startTimer } from \"../../ts/timer\";\nimport \"./Toolbar.css\";\n\nfunction Toolbar(props: { sampler: Sampler | undefined }) {\n  const { appState, appDispatch } = useContext(AppContext);\n  const [isMute, setMute] = useState(false);\n\n  const PlayPauseMidi = () => {\n    if (appState.toneState !== \"started\") {\n      appDispatch({ type: \"playMidi\" });\n      startTimer(() => appDispatch({ type: \"countTime\" }));\n    } else {\n      appDispatch({ type: \"pauseMidi\" });\n    }\n  };\n\n  const stopMidi = () => {\n    appDispatch({ type: \"stopMidi\" });\n  };\n\n  const toggleVolume = () => {\n    if (!props.sampler) return;\n    const volume = props.sampler.volume;\n    volume.value = isMute ? 0 : volume.minValue;\n    setMute(!isMute);\n  };\n\n  return (\n    <div id=\"toolbar\">\n      <PlayPauseButton\n        state={appState.toneState}\n        disabled={appState.disabled}\n        onClick={PlayPauseMidi}\n      />\n      <StopButton disabled={appState.disabled} onClick={stopMidi} />\n      <VolumeButton mute={isMute} onClick={toggleVolume} />\n      <Time time={appState.time} duration={appState.duration} />\n      <GitHubLink />\n    </div>\n  );\n}\n\nexport default Toolbar;\n","import { Sampler } from \"tone\";\nimport PlayMidi from \"../molecules/FileDrop\";\nimport Toolbar from \"../molecules/Toolbar\";\nimport \"./Menu.css\";\n\nfunction Menu(props: { sampler: Sampler | undefined }) {\n  return (\n    <div id=\"menu\">\n      <PlayMidi sampler={props.sampler} />\n      <Toolbar sampler={props.sampler} />\n    </div>\n  );\n}\n\nexport default Menu;\n","import { midi_to_note } from \"../../ts/midiNote\";\nimport \"./Key.css\";\n\nconst regExpC: RegExp = /C[1-8]/;\n\nfunction Key(props: { midiNote: number; isBlackKey: boolean }) {\n  const note: string = midi_to_note(props.midiNote).toString();\n\n  return (\n    <div className=\"keyboard-key\">\n      <div\n        className={props.isBlackKey ? \"black-key\" : \"white-key\"}\n        data-key-num={props.midiNote}\n      >\n        <span className=\"key-label\">{regExpC.test(note) ? note : \"\"}</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Key;\n","import Key from \"../atoms/Key\";\nimport \"./KeyboardRow.css\";\n\nconst isBlackKey = (midiNote: number) => {\n  switch ((midiNote - 20) % 12) {\n    case 0:\n    case 2:\n    case 5:\n    case 7:\n    case 10:\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction KeyboardRow(props: { midiNotes: number[]; startNum: number }) {\n  return (\n    <div className=\"keyboard-row\">\n      {props.midiNotes.map((midiNote: number, i: number) => {\n        return (\n          <Key\n            key={i + props.startNum}\n            midiNote={midiNote}\n            isBlackKey={isBlackKey(midiNote)}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default KeyboardRow;\n","import { range } from \"ramda\";\nimport MediaQuery from \"react-responsive\";\nimport { Sampler } from \"tone\";\nimport { midi_to_note } from \"../../ts/midiNote\";\nimport KeyboardRow from \"../molecules/KeyboardRow\";\n\n// https://www.nxworld.net/js-array-chunk.html\nconst arrayChunk = ([...array], size = 1) =>\n  array.reduce(\n    (acc, value, index) =>\n      index % size ? acc : [...acc, array.slice(index, index + size)],\n    []\n  );\n\nconst midiNotes = range(21, 109);\nconst midiNotesLen = midiNotes.length / 2;\nconst [midiNotesUpper, midiNotesLower] = arrayChunk(\n  midiNotes,\n  midiNotes.length / 2\n);\n\nfunction Keyboard(props: { sampler: Sampler | undefined }) {\n  const _pressKey = (e: any) => {\n    if (!props.sampler) return;\n    const target = e.target;\n    if (target.dataset.keyNum) {\n      target.classList.add(\"pressing\");\n      props.sampler.triggerAttack(midi_to_note(target.dataset.keyNum));\n    }\n  };\n\n  const _releaseKey = (e: any) => {\n    if (!props.sampler) return;\n    const target = e.target;\n    target.classList.remove(\"pressing\");\n    props.sampler.triggerRelease(midi_to_note(target.dataset.keyNum));\n  };\n\n  const _overKey = (e: any) => {\n    const elements = Array.from(document.querySelectorAll(\":active\"));\n    if (elements.length !== 0) _pressKey(e);\n  };\n\n  const _outKey = (e: any) => {\n    _releaseKey(e);\n  };\n\n  const pressKey = (e: any) => {\n    _pressKey(e);\n    const currentTarget = e.currentTarget;\n    currentTarget.addEventListener(\"pointerover\", _overKey);\n    currentTarget.addEventListener(\"pointerout\", _outKey);\n  };\n\n  const releaseKey = (e: any) => {\n    _releaseKey(e);\n    const currentTarget = e.currentTarget;\n    currentTarget.removeEventListener(\"pointerover\", _overKey);\n    currentTarget.removeEventListener(\"pointerout\", _outKey);\n  };\n\n  return (\n    <div\n      id=\"keyboard-container\"\n      onPointerDown={pressKey}\n      onPointerUp={releaseKey}\n    >\n      <MediaQuery query=\"(min-width: 1025px)\">\n        <KeyboardRow midiNotes={midiNotes} startNum={0} />\n      </MediaQuery>\n      <MediaQuery query=\"(max-width: 1024px)\">\n        <KeyboardRow midiNotes={midiNotesUpper} startNum={0} />\n        <KeyboardRow midiNotes={midiNotesLower} startNum={midiNotesLen} />\n      </MediaQuery>\n    </div>\n  );\n}\n\nexport default Keyboard;\n","import { PlaybackState, Transport } from \"tone\";\nimport { stopTimer } from \"./timer\";\n\nexport type AppState = {\n  time: number;\n  duration: number;\n  toneState: PlaybackState;\n  disabled: boolean;\n};\n\nexport type AppAction =\n  | { type: \"setTime\"; time: number }\n  | { type: \"countTime\" }\n  | { type: \"setDuration\"; duration: number }\n  | { type: \"playMidi\" }\n  | { type: \"pauseMidi\" }\n  | { type: \"stopMidi\" }\n  | { type: \"setDisabled\"; disabled: boolean };\n\nexport const initialAppState: AppState = {\n  time: 0,\n  duration: 0,\n  toneState: \"stopped\",\n  disabled: true,\n};\n\nexport const appReducer = (state: AppState, action: AppAction) => {\n  switch (action.type) {\n    case \"setTime\":\n      return {\n        ...state,\n        time: action.time,\n      };\n    case \"countTime\":\n      if (state.duration > state.time) {\n        return {\n          ...state,\n          time: state.time + 1,\n        };\n      } else {\n        stopTimer();\n        return {\n          ...state,\n          time: 0,\n          toneState: Transport.stop().state,\n        };\n      }\n    case \"setDuration\":\n      return {\n        ...state,\n        duration: action.duration,\n      };\n    case \"playMidi\":\n      return {\n        ...state,\n        toneState: Transport.start().state,\n      };\n    case \"pauseMidi\":\n      stopTimer();\n      return {\n        ...state,\n        toneState: Transport.pause().state,\n      };\n    case \"stopMidi\":\n      stopTimer();\n      return {\n        ...state,\n        time: 0,\n        toneState: Transport.stop().state,\n      };\n    case \"setDisabled\":\n      return {\n        ...state,\n        disabled: action.disabled,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  createContext,\n  Dispatch,\n  useEffect,\n  useReducer,\n  useState,\n} from \"react\";\nimport { Sampler } from \"tone\";\nimport { Backdrop, CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Menu from \"./components/organisms/Menu\";\nimport Keyboard from \"./components/organisms/Keyboard\";\nimport { AppState, AppAction, initialAppState, appReducer } from \"./ts/reducer\";\nimport \"./App.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\n\nexport const AppContext = createContext(\n  {} as { appState: AppState; appDispatch: Dispatch<AppAction> }\n);\n\nfunction App() {\n  const classes = useStyles();\n  const [isOpen, setOpen] = useState(true);\n  const [sampler, setSampler] = useState<Sampler | undefined>(undefined);\n  const [appState, appDispatch] = useReducer(appReducer, initialAppState);\n\n  useEffect(() => {\n    const _sampler = new Sampler({\n      attack: 0,\n      urls: {\n        A0: \"A0v1.mp3\",\n        C1: \"C1v1.mp3\",\n        \"D#1\": \"Ds1v1.mp3\",\n        \"F#1\": \"Fs1v1.mp3\",\n        A1: \"A1v1.mp3\",\n        C2: \"C2v1.mp3\",\n        \"D#2\": \"Ds2v1.mp3\",\n        \"F#2\": \"Fs2v1.mp3\",\n        A2: \"A2v1.mp3\",\n        C3: \"C3v1.mp3\",\n        \"D#3\": \"Ds3v1.mp3\",\n        \"F#3\": \"Fs3v1.mp3\",\n        A3: \"A3v1.mp3\",\n        C4: \"C4v1.mp3\",\n        \"D#4\": \"Ds4v1.mp3\",\n        \"F#4\": \"Fs4v1.mp3\",\n        A4: \"A4v1.mp3\",\n        C5: \"C5v1.mp3\",\n        \"D#5\": \"Ds5v1.mp3\",\n        \"F#5\": \"Fs5v1.mp3\",\n        A5: \"A5v1.mp3\",\n        C6: \"C6v1.mp3\",\n        \"D#6\": \"Ds6v1.mp3\",\n        \"F#6\": \"Fs6v1.mp3\",\n        A6: \"A6v1.mp3\",\n        C7: \"C7v1.mp3\",\n        \"D#7\": \"Ds7v1.mp3\",\n        \"F#7\": \"Fs7v1.mp3\",\n        A7: \"A7v1.mp3\",\n        C8: \"C8v1.mp3\",\n      },\n      baseUrl: process.env.PUBLIC_URL + \"/audio/\",\n      release: 1,\n      onload: () => {\n        setSampler(_sampler);\n        setOpen(false);\n      },\n    }).toDestination();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <AppContext.Provider value={{ appState, appDispatch }}>\n        <Menu sampler={sampler} />\n        <Keyboard sampler={sampler} />\n      </AppContext.Provider>\n      <Backdrop className={classes.backdrop} open={isOpen}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}